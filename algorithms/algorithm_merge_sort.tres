[gd_resource type="Resource" script_class="Algorithm" load_steps=3 format=3 uid="uid://cuqu3njvk8xcr"]

[ext_resource type="Texture2D" uid="uid://bt702hqwk7pkl" path="res://icon.svg" id="1_50fm6"]
[ext_resource type="Script" path="res://algorithms/algorithm.gd" id="1_mt3re"]

[resource]
script = ExtResource("1_mt3re")
algorithm_name = "Merge Sort"
algorithm_tag = 0
algorithm_time_complexity = 4
algorithm_space_complexity = 1
algorithm_icon = ExtResource("1_50fm6")
algorithm_code = "def merge_sort(arr):
    if len(arr) <= 1:
        return arr
    
    # Split the array into two halves
    mid = len(arr) // 2
    left_half = arr[:mid]
    right_half = arr[mid:]
    
    # Recursively sort each half
    left_half = merge_sort(left_half)
    right_half = merge_sort(right_half)
    
    # Merge the sorted halves
    merged = merge(left_half, right_half)
    
    return merged

def merge(left, right):
    result = []
    left_idx, right_idx = 0, 0
    
    while left_idx < len(left) and right_idx < len(right):
        if left[left_idx] < right[right_idx]:
            result.append(left[left_idx])
            left_idx += 1
        else:
            result.append(right[right_idx])
            right_idx += 1
    
    result.extend(left[left_idx:])
    result.extend(right[right_idx:])
    
    return result"
